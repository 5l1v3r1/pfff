<?hh     /* -*- php -*- */
// THIS IS AUTOGENERATED BY builtins_php.ml

class Vector {
  public function __construct($iterable = null) { }
  public function isEmpty() { }
  public function count() { }
  public function items() { }
  public function keys() { }
  public function view() { }
  public function kvzip() { }
  public function at($key) { }
  public function get($key) { }
  public function set($key, $value) { }
  public function setAll($iterable) { }
  public function put($key, $value) { }
  public function clear() { }
  public function contains($key) { }
  public function containsKey($key) { }
  public function removeKey($key) { }
  public function append($val) { }
  public function add($val) { }
  public function addAll($iterable) { }
  public function pop() { }
  public function resize($sz, $value) { }
  public function reserve($sz) { }
  public function toArray() { }
  public function getIterator() { }
  public function map($callback) { }
  public function filter($callback) { }
  public function zip($iterable) { }
  public function sort($col = null) { }
  public function reverse() { }
  public function splice($offset, $len = null, $replacement = null) { }
  public function linearSearch($search_value) { }
  public function shuffle() { }
  public function __toString() { }
  public function __get($name) { }
  public function __set($name, $value) { }
  public function __isset($name) { }
  public function __unset($name) { }
  static public function fromItems($iterable) { }
  static public function fromArray($arr) { }
  static public function fromVector($vec) { }
  static public function slice($vec, $offset, $len = null) { }
}
class VectorIterator {
  public function __construct() { }
  public function current() { }
  public function key() { }
  public function valid() { }
  public function next() { }
  public function rewind() { }
}
class Map {
  public function __construct($iterable = null) { }
  public function isEmpty() { }
  public function count() { }
  public function items() { }
  public function keys() { }
  public function view() { }
  public function kvzip() { }
  public function at($key) { }
  public function get($key) { }
  public function set($key, $value) { }
  public function setAll($iterable) { }
  public function put($key, $value) { }
  public function clear() { }
  public function contains($key) { }
  public function containsKey($key) { }
  public function remove($key) { }
  public function removeKey($key) { }
  public function discard($key) { }
  public function add($val) { }
  public function addAll($iterable) { }
  public function toArray() { }
  public function copyAsArray() { }
  public function toKeysArray() { }
  public function values() { }
  public function toValuesArray() { }
  public function updateFromArray($arr) { }
  public function updateFromIterable($it) { }
  public function differenceByKey($it) { }
  public function getIterator() { }
  public function map($callback) { }
  public function filter($callback) { }
  public function zip($iterable) { }
  public function __toString() { }
  public function __get($name) { }
  public function __set($name, $value) { }
  public function __isset($name) { }
  public function __unset($name) { }
  static public function fromItems($iterable) { }
  static public function fromArray($mp) { }
  static public function fromIterable($mp) { }
}
class MapIterator {
  public function __construct() { }
  public function current() { }
  public function key() { }
  public function valid() { }
  public function next() { }
  public function rewind() { }
}
class StableMap {
  public function __construct($iterable = null) { }
  public function isEmpty() { }
  public function count() { }
  public function items() { }
  public function keys() { }
  public function view() { }
  public function kvzip() { }
  public function at($key) { }
  public function get($key) { }
  public function set($key, $value) { }
  public function setAll($iterable) { }
  public function put($key, $value) { }
  public function clear() { }
  public function contains($key) { }
  public function containsKey($key) { }
  public function remove($key) { }
  public function removeKey($key) { }
  public function discard($key) { }
  public function add($val) { }
  public function addAll($iterable) { }
  public function toArray() { }
  public function copyAsArray() { }
  public function toKeysArray() { }
  public function values() { }
  public function toValuesArray() { }
  public function updateFromArray($arr) { }
  public function updateFromIterable($it) { }
  public function differenceByKey($it) { }
  public function getIterator() { }
  public function map($callback) { }
  public function filter($callback) { }
  public function zip($iterable) { }
  public function __get($name) { }
  public function __set($name, $value) { }
  public function __isset($name) { }
  public function __unset($name) { }
  static public function fromItems($iterable) { }
  public function __toString() { }
  static public function fromArray($mp) { }
  static public function fromIterable($mp) { }
}
class StableMapIterator {
  public function __construct() { }
  public function current() { }
  public function key() { }
  public function valid() { }
  public function next() { }
  public function rewind() { }
}
class Set {
  public function __construct($iterable = null) { }
  public function isEmpty() { }
  public function count() { }
  public function items() { }
  public function view() { }
  public function clear() { }
  public function contains($val) { }
  public function remove($val) { }
  public function discard($val) { }
  public function add($val) { }
  public function addAll($iterable) { }
  public function toArray() { }
  public function getIterator() { }
  public function map($callback) { }
  public function filter($callback) { }
  public function zip($iterable) { }
  public function difference($iterable) { }
  public function updateFromArrayValues($arr) { }
  public function updateFromIterableValues($iterable) { }
  public function __toString() { }
  public function __get($name) { }
  public function __set($name, $value) { }
  public function __isset($name) { }
  public function __unset($name) { }
  static public function fromItems($iterable) { }
  static public function fromArray($arr) { }
  static public function fromArrays(...) { }
  static public function fromIterableValues($iterable) { }
}
class SetIterator {
  public function __construct() { }
  public function current() { }
  public function key() { }
  public function valid() { }
  public function next() { }
  public function rewind() { }
}
class Pair {
  public function __construct() { }
  public function isEmpty() { }
  public function count() { }
  public function items() { }
  public function keys() { }
  public function view() { }
  public function kvzip() { }
  public function toArray() { }
  public function getIterator() { }
  public function map($callback) { }
  public function filter($callback) { }
  public function zip($iterable) { }
  public function at($key) { }
  public function get($key) { }
  public function containsKey($key) { }
}
class PairIterator {
  public function __construct() { }
  public function current() { }
  public function key() { }
  public function valid() { }
  public function next() { }
  public function rewind() { }
}
