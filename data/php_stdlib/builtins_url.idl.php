<?php
/*
 * Purpose: Decodes data encoded with MIME base64
 * Example:   
 *   <?php
 *   $str = 'VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw==';
 *   echo base64_decode($str);
 *   ?>
 * 
 * Output:   
 *   This is an encoded string
 */
function base64_decode(String $data, Boolean $strict = false) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encodes data with MIME base64
 * Example:   
 *   <?php
 *   $str = 'This is an encoded string';
 *   echo base64_encode($str);
 *   ?>
 * 
 * Output:   
 *   VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw==
 */
function base64_encode(String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Fetches all the headers sent by the server in response to a HTTP request
 * Example:   
 *   <?php
 *   $url = 'http://www.example.com';
 *   
 *   print_r(get_headers($url));
 *   
 *   print_r(get_headers($url, 1));
 *   ?>
 * 
 * Output:   
 *   Array
 *   (
 *       [0] => HTTP/1.1 200 OK
 *       [1] => Date: Sat, 29 May 2004 12:28:13 GMT
 *       [2] => Server: Apache/1.3.27 (Unix)  (Red-Hat/Linux)
 *       [3] => Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT
 *       [4] => ETag: "3f80f-1b6-3e1cb03b"
 *       [5] => Accept-Ranges: bytes
 *       [6] => Content-Length: 438
 *       [7] => Connection: close
 *       [8] => Content-Type: text/html
 *   )
 *   
 *   Array
 *   (
 *       [0] => HTTP/1.1 200 OK
 *       [Date] => Sat, 29 May 2004 12:28:14 GMT
 *       [Server] => Apache/1.3.27 (Unix)  (Red-Hat/Linux)
 *       [Last-Modified] => Wed, 08 Jan 2003 23:11:55 GMT
 *       [ETag] => "3f80f-1b6-3e1cb03b"
 *       [Accept-Ranges] => bytes
 *       [Content-Length] => 438
 *       [Connection] => close
 *       [Content-Type] => text/html
 *   )
 */
function get_headers(String $url, Int32 $format = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Extracts all meta tag content attributes from a file and returns an array
 * Example:   
 *   <meta name="author" content="name">
 *   <meta name="keywords" content="php documentation">
 *   <meta name="DESCRIPTION" content="a php manual">
 *   <meta name="geo.position" content="49.33;-86.59">
 *   </head> <!-- parsing stops here -->
 * 
 * Output: 
 */
function get_meta_tags(String $filename, Boolean $use_include_path = false) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Generate URL-encoded query string
 * Example:   
 *   <?php
 *   $data = array('foo'=>'bar',
 *                 'baz'=>'boom',
 *                 'cow'=>'milk',
 *                 'php'=>'hypertext processor');
 *   
 *   echo http_build_query($data) . "\n";
 *   echo http_build_query($data, '', '&amp;');
 *   
 *   ?>
 * 
 * Output:   
 *   foo=bar&baz=boom&cow=milk&php=hypertext+processor
 *   foo=bar&amp;baz=boom&amp;cow=milk&amp;php=hypertext+processor
 */
function http_build_query(Variant $formdata, String $numeric_prefix = null_string, String $arg_separator = "&") {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Parse a URL and return its components
 * Example:   
 *   <?php
 *   $url = 'http://username:password@hostname/path?arg=value#anchor';
 *   
 *   print_r(parse_url($url));
 *   
 *   echo parse_url($url, PHP_URL_PATH);
 *   ?>
 * 
 * Output:   
 *   Array
 *   (
 *       [scheme] => http
 *       [host] => hostname
 *       [user] => username
 *       [pass] => password
 *       [path] => /path
 *       [query] => arg=value
 *       [fragment] => anchor
 *   )
 *   /path
 */
function parse_url(String $url, Int32 $component = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decode URL-encoded strings
 * Example:   
 *   <?php
 *   
 *   echo rawurldecode('foo%20bar%40baz'); // foo bar@baz
 *   
 *   ?>
 * 
 * Output: 
 */
function rawurldecode(String $str) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: URL-encode according to RFC 1738
 * Example:   
 *   <?php
 *   echo '<a href="ftp://user:', rawurlencode('foo @+%/'),
 *        '@ftp.example.com/x.txt">';
 *   ?>
 * 
 * Output:   
 *   <a href="ftp://user:foo%20%40%2B%25%2F@ftp.example.com/x.txt">
 */
function rawurlencode(String $str) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decodes URL-encoded string
 * Example:   
 *   <?php
 *   $a = explode('&', $QUERY_STRING);
 *   $i = 0;
 *   while ($i < count($a)) {
 *       $b = split('=', $a[$i]);
 *       echo 'Value for parameter ', htmlspecialchars(urldecode($b[0])),
 *            ' is ', htmlspecialchars(urldecode($b[1])), "<br />\n";
 *       $i++;
 *   }
 *   ?>
 * 
 * Output: 
 */
function urldecode(String $str) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: URL-encodes string
 * Example:   
 *   <?php
 *   echo '<a href="mycgi?foo=', urlencode($userinput), '">';
 *   ?>
 * 
 * Output: 
 */
function urlencode(String $str) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

