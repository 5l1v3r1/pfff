<?php
/*
 * Purpose: Connect to an LDAP server
 * Example:   
 *   <?php
 *   
 *   // LDAP variables
 *   $ldaphost = "ldap.example.com";  // your ldap servers
 *   $ldapport = 389;                 // your ldap server's port number
 *   
 *   // Connecting to LDAP
 *   $ldapconn = ldap_connect($ldaphost, $ldapport)
 *             or die("Could not connect to $ldaphost");
 *   
 *   ?>
 * 
 * Output: 
 */
function ldap_connect(String $hostname = null_string, Int32 $port = 389) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Splits DN into its component parts
 * Example: 
 * 
 * Output: 
 */
function ldap_explode_dn(String $dn, Int32 $with_attrib) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Convert DN to User Friendly Naming format
 * Example: 
 * 
 * Output: 
 */
function ldap_dn2ufn(String $db) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Convert LDAP error number into string error message
 * Example:   
 *   <?php
 *     for ($i=0; $i<100; $i++) {
 *       printf("Error $i: %s<br />\n", ldap_err2str($i));
 *     }
 *   ?>
 * 
 * Output: 
 */
function ldap_err2str(Int32 $errnum) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Translate 8859 characters to t61 characters
 * Example: 
 * 
 * Output: 
 */
function ldap_8859_to_t61(String $value) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Translate t61 characters to 8859 characters
 * Example: 
 * 
 * Output: 
 */
function ldap_t61_to_8859(String $value) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Add entries to LDAP directory
 * Example:   
 *   <?php
 *   $entree["attribut1"] = "value";
 *   $entree["attribut2"][0] = "value1";
 *   $entree["attribut2"][1] = "value2";
 *   ?>
 *        
 * 
 * Output: 
 */
function ldap_add(Resource $link_identifier, String $dn, VariantVec $entry) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Add attribute values to current attributes
 * Example: 
 * 
 * Output: 
 */
function ldap_mod_add(Resource $link_identifier, String $dn, VariantVec $entry) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Delete attribute values from current attributes
 * Example: 
 * 
 * Output: 
 */
function ldap_mod_del(Resource $link_identifier, String $dn, VariantVec $entry) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Replace attribute values with new ones
 * Example: 
 * 
 * Output: 
 */
function ldap_mod_replace(Resource $link_identifier, String $dn, VariantVec $entry) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Modify an LDAP entry
 * Example: 
 * 
 * Output: 
 */
function ldap_modify(Resource $link_identifier, String $dn, VariantVec $entry) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Bind to LDAP directory
 * Example:   
 *   <?php
 *   
 *   // using ldap bind
 *   $ldaprdn  = 'uname';     // ldap rdn or dn
 *   $ldappass = 'password';  // associated password
 *   
 *   // connect to ldap server
 *   $ldapconn = ldap_connect("ldap.example.com")
 *       or die("Could not connect to LDAP server.");
 *   
 *   if ($ldapconn) {
 *   
 *       // binding to ldap server
 *       $ldapbind = ldap_bind($ldapconn, $ldaprdn, $ldappass);
 *   
 *       // verify binding
 *       if ($ldapbind) {
 *           echo "LDAP bind successful...";
 *       } else {
 *           echo "LDAP bind failed...";
 *       }
 *   
 *   }
 *   
 *   ?>
 * 
 * Output: 
 */
function ldap_bind(Resource $link_identifier, String $bind_rdn = null_string, String $bind_password = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Bind to LDAP directory using SASL
 * Example: 
 * 
 * Output: 
 */
function ldap_sasl_bind(Resource $link, String $binddn = null_string, String $password = null_string, String $sasl_mech = null_string, String $sasl_realm = null_string, String $sasl_authz_id = null_string, String $props = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set a callback function to do re-binds on referral chasing
 * Example: 
 * 
 * Output: 
 */
function ldap_set_rebind_proc(Resource $link, String $callback) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Sort LDAP result entries
 * Example: 
 * 
 * Output: 
 */
function ldap_sort(Resource $link, Resource $result, String $sortfilter) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Start TLS
 * Example: 
 * 
 * Output: 
 */
function ldap_start_tls(Resource $link) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Unbind from LDAP directory
 * Example: 
 * 
 * Output: 
 */
function ldap_unbind(Resource $link_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the current value for given option
 * Example:   
 *   <?php
 *   // $ds is a valid link identifier for a directory server
 *   if (ldap_get_option($ds, LDAP_OPT_PROTOCOL_VERSION, $version)) {
 *       echo "Using protocol version $version\n";
 *   } else {
 *       echo "Unable to determine protocol version\n";
 *   }
 *   ?>
 * 
 * Output: 
 */
function ldap_get_option(Resource $link_identifier, Int32 $option, Variant &$retval) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set the value of the given option
 * Example:   
 *   <?php
 *   // $ds is a valid link identifier for a directory server
 *   if (ldap_set_option($ds, LDAP_OPT_PROTOCOL_VERSION, 3)) {
 *       echo "Using LDAPv3";
 *   } else {
 *       echo "Failed to set protocol version to 3";
 *   }
 *   ?>
 * 
 * Output: 
 */
function ldap_set_option(Resource $link_identifier, Int32 $option, Variant $newval) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: &Alias;  <function>ldap_unbind</function>
 * Example: 
 * 
 * Output: 
 */
function ldap_close(Resource $link_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Single-level search
 * Example:   
 *   <?php
 *   // $ds is a valid link identifier for a directory server
 *   
 *   $basedn = "o=My Company, c=US";
 *   $justthese = array("ou");
 *   
 *   $sr = ldap_list($ds, $basedn, "ou=*", $justthese);
 *   
 *   $info = ldap_get_entries($ds, $sr);
 *   
 *   for ($i=0; $i < $info["count"]; $i++) {
 *       echo $info[$i]["ou"][0];
 *   }
 *   ?>
 * 
 * Output: 
 */
function ldap_list(Resource $link_identifier, String $base_dn, String $filter, StringVec $attributes = null, Int32 $attrsonly = 0, Int32 $sizelimit = 0, Int32 $timelimit = 0, Int32 $deref = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Read an entry
 * Example: 
 * 
 * Output: 
 */
function ldap_read(Resource $link_identifier, String $base_dn, String $filter, StringVec $attributes = null, Int32 $attrsonly = 0, Int32 $sizelimit = 0, Int32 $timelimit = 0, Int32 $deref = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Search LDAP tree
 * Example:   
 *   <?php
 *   // $ds is a valid link identifier for a directory server
 *   
 *   // $person is all or part of a person's name, eg "Jo"
 *   
 *   $dn = "o=My Company, c=US";
 *   $filter="(|(sn=$person*)(givenname=$person*))";
 *   $justthese = array("ou", "sn", "givenname", "mail");
 *   
 *   $sr=ldap_search($ds, $dn, $filter, $justthese);
 *   
 *   $info = ldap_get_entries($ds, $sr);
 *   
 *   echo $info["count"]." entries returned\n";
 *   ?>
 * 
 * Output: 
 */
function ldap_search(Resource $link_identifier, String $base_dn, String $filter, StringVec $attributes = null, Int32 $attrsonly = 0, Int32 $sizelimit = 0, Int32 $timelimit = 0, Int32 $deref = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Modify the name of an entry
 * Example: 
 * 
 * Output: 
 */
function ldap_rename(Resource $link_identifier, String $dn, String $newrdn, String $newparent, Boolean $deleteoldrdn) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Delete an entry from a directory
 * Example: 
 * 
 * Output: 
 */
function ldap_delete(Resource $link_identifier, String $dn) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Compare value of attribute found in entry specified with DN
 * Example:   
 *   <?php
 *   
 *   $ds=ldap_connect("localhost");  // assuming the LDAP server is on this host
 *   
 *   if ($ds) {
 *   
 *       // bind
 *       if (ldap_bind($ds)) {
 *   
 *           // prepare data
 *           $dn = "cn=Matti Meikku, ou=My Unit, o=My Company, c=FI";
 *           $value = "secretpassword";
 *           $attr = "password";
 *   
 *           // compare value
 *           $r=ldap_compare($ds, $dn, $attr, $value);
 *   
 *           if ($r === -1) {
 *               echo "Error: " . ldap_error($ds);
 *           } elseif ($r === true) {
 *               echo "Password correct.";
 *           } elseif ($r === false) {
 *               echo "Wrong guess! Password incorrect.";
 *           }
 *   
 *       } else {
 *           echo "Unable to bind to LDAP server.";
 *       }
 *   
 *       ldap_close($ds);
 *   
 *   } else {
 *       echo "Unable to connect to LDAP server.";
 *   }
 *   ?>
 *   
 * 
 * Output: 
 */
function ldap_compare(Resource $link_identifier, String $dn, String $attribute, String $value) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Return the LDAP error number of the last LDAP command
 * Example:   
 *   <?php
 *   // This example contains an error, which we will catch.
 *   $ld = ldap_connect("localhost");
 *   $bind = ldap_bind($ld);
 *   // syntax error in filter expression (errno 87),
 *   // must be "objectclass=*" to work.
 *   $res =  @ldap_search($ld, "o=Myorg, c=DE", "objectclass");
 *   if (!$res) {
 *       echo "LDAP-Errno: " . ldap_errno($ld) . "<br />\n";
 *       echo "LDAP-Error: " . ldap_error($ld) . "<br />\n";
 *       die("Argh!<br />\n");
 *   }
 *   $info = ldap_get_entries($ld, $res);
 *   echo $info["count"] . " matching entries.<br />\n";
 *   ?>
 * 
 * Output: 
 */
function ldap_errno(Resource $link_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Return the LDAP error message of the last LDAP command
 * Example: 
 * 
 * Output: 
 */
function ldap_error(Resource $link_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the DN of a result entry
 * Example: 
 * 
 * Output: 
 */
function ldap_get_dn(Resource $link_identifier, Resource $result_entry_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Count the number of entries in a search
 * Example: 
 * 
 * Output: 
 */
function ldap_count_entries(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get all result entries
 * Example:   
 *   return_value["count"] = number of entries in the result
 *   return_value[0] : refers to the details of first entry
 *   
 *   return_value[i]["dn"] =  DN of the ith entry in the result
 *   
 *   return_value[i]["count"] = number of attributes in ith entry
 *   return_value[i][j] = NAME of the jth attribute in the ith entry in the result
 *   
 *   return_value[i]["attribute"]["count"] = number of values for
 *                                           attribute in ith entry
 *   return_value[i]["attribute"][j] = jth value of attribute in ith entry
 * 
 * Output: 
 */
function ldap_get_entries(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Return first result id
 * Example: 
 * 
 * Output: 
 */
function ldap_first_entry(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get next result entry
 * Example: 
 * 
 * Output: 
 */
function ldap_next_entry(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get attributes from a search result entry
 * Example:   
 *   return_value["count"] = number of attributes in the entry
 *   return_value[0] = first attribute
 *   return_value[n] = nth attribute
 *   
 *   return_value["attribute"]["count"] = number of values for attribute
 *   return_value["attribute"][0] = first value of the attribute
 *   return_value["attribute"][i] = (i+1)th value of the attribute
 * 
 * Output: 
 */
function ldap_get_attributes(Resource $link_identifier, Resource $result_entry_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Return first attribute
 * Example: 
 * 
 * Output: 
 */
function ldap_first_attribute(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the next attribute in result
 * Example: 
 * 
 * Output: 
 */
function ldap_next_attribute(Resource $link_identifier, Resource $result_entry_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Return first reference
 * Example: 
 * 
 * Output: 
 */
function ldap_first_reference(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get next reference
 * Example: 
 * 
 * Output: 
 */
function ldap_next_reference(Resource $link_identifier, Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Extract information from reference entry
 * Example: 
 * 
 * Output: 
 */
function ldap_parse_reference(Resource $link_identifier, Resource $result_identifier, StringVec &$referrals) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Extract information from result
 * Example: 
 * 
 * Output: 
 */
function ldap_parse_result(Resource $link_identifier, Resource $result_entry_identifier, Int32 &$errcode, String &$matcheddn = null, String &$errmsg = null, StringVec &$referrals = null) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Free result memory
 * Example: 
 * 
 * Output: 
 */
function ldap_free_result(Resource $result_identifier) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get all binary values from a result entry
 * Example: 
 * 
 * Output: 
 */
function ldap_get_values_len(Resource $link_identifier, Resource $result_entry_identifier, String $attribute) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get all values from a result entry
 * Example:   
 *   <?php
 *   // $ds is a valid link identifier for a directory server
 *   
 *   // $sr is a valid search result from a prior call to
 *   //     one of the ldap directory search calls
 *   
 *   // $entry is a valid entry identifier from a prior call to
 *   //        one of the calls that returns a directory entry
 *   
 *   $values = ldap_get_values($ds, $entry, "mail");
 *   
 *   echo $values["count"] . " email addresses for this entry.<br />";
 *   
 *   for ($i=0; $i < $values["count"]; $i++) {
 *       echo $values[$i] . "<br />";
 *   }
 *   ?>
 * 
 * Output: 
 */
function ldap_get_values(Resource $link_identifier, Resource $result_entry_identifier, String $attribute) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

