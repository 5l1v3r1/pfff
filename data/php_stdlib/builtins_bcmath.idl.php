<?php
/*
 * Purpose: Set default scale parameter for all bc math functions
 * Example:   
 *   <?php
 *   
 *   // default scale : 3
 *   bcscale(3);
 *   echo bcdiv('105', '6.55957'); // 16.007
 *   
 *   // this is the same without bcscale()
 *   echo bcdiv('105', '6.55957', 3); // 16.007
 *   
 *   ?>
 * 
 * Output: 
 */
function bcscale(Int64 $scale) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Add two arbitrary precision numbers
 * Example:   
 *   <?php
 *   
 *   $a = '1.234';
 *   $b = '5';
 *   
 *   echo bcadd($a, $b);     // 6
 *   echo bcadd($a, $b, 4);  // 6.2340
 *   
 *   ?>
 * 
 * Output: 
 */
function bcadd(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Subtract one arbitrary precision number from another
 * Example:   
 *   <?php
 *   
 *   $a = '1.234';
 *   $b = '5';
 *   
 *   echo bcsub($a, $b);     // -3
 *   echo bcsub($a, $b, 4);  // -3.7660
 *   
 *   ?>
 * 
 * Output: 
 */
function bcsub(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Compare two arbitrary precision numbers
 * Example:   
 *   <?php
 *   
 *   echo bccomp('1', '2') . "\n";   // -1
 *   echo bccomp('1.00001', '1', 3); // 0
 *   echo bccomp('1.00001', '1', 5); // 1
 *   
 *   ?>
 * 
 * Output: 
 */
function bccomp(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Multiply two arbitrary precision number
 * Example:   
 *   <?php
 *   echo bcmul('1.34747474747', '35', 3); // 47.161
 *   echo bcmul('2', '4'); // 8
 *   ?>
 * 
 * Output: 
 */
function bcmul(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Divide two arbitrary precision numbers
 * Example:   
 *   <?php
 *   
 *   echo bcdiv('105', '6.55957', 3);  // 16.007
 *   
 *   ?>
 * 
 * Output: 
 */
function bcdiv(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get modulus of an arbitrary precision number
 * Example:   
 *   <?php
 *   echo bcmod('4', '2'); // 0
 *   echo bcmod('2', '4'); // 2
 *   ?>
 * 
 * Output: 
 */
function bcmod(String $left, String $right) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Raise an arbitrary precision number to another
 * Example:   
 *   <?php
 *   
 *   echo bcpow('4.2', '3', 2); // 74.08
 *   
 *   ?>
 * 
 * Output: 
 */
function bcpow(String $left, String $right, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Raise an arbitrary precision number to another, reduced by a specified modulus
 * Example:   
 *   <?php
 *   $a = bcpowmod($x, $y, $mod);
 *   
 *   $b = bcmod(bcpow($x, $y), $mod);
 *   
 *   // $a and $b are equal to each other.
 *   
 *   ?>
 * 
 * Output: 
 */
function bcpowmod(String $left, String $right, String $modulus, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the square root of an arbitrary precision number
 * Example:   
 *   <?php
 *   
 *   echo bcsqrt('2', 3); // 1.414
 *   
 *   ?>
 * 
 * Output: 
 */
function bcsqrt(String $operand, Int64 $scale = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

