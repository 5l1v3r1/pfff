<?php
// THIS IS AUTOGENERATED BY pfff/facebook/hackificator/builtins_hack.ml
function asio_enter_context() { }
function asio_exit_context() { }
function asio_get_current_context_idx() { }
function asio_get_running_in_context($ctx_idx) { }
function asio_get_running() { }
function asio_get_current() { }
function asio_set_on_failed_callback($on_failed_cb) { }
function asio_set_on_started_callback($on_started_cb) { }
abstract class WaitHandle {
  public function __construct() { }
  public function getWaitHandle() { }
  public function import() { }
  public function join() { }
  public function isFinished() { }
  public function isSucceeded() { }
  public function isFailed() { }
  public function getID() { }
  public function getName() { }
  public function getExceptionIfFailed() { }
}
abstract class StaticWaitHandle extends WaitHandle {
  public function __construct() { parent::__construct();}
}
class StaticResultWaitHandle extends StaticWaitHandle {
  public function __construct() { parent::__construct();}
  static public function create($result) { }
}
class StaticExceptionWaitHandle extends StaticWaitHandle {
  public function __construct() { parent::__construct();}
  static public function create($exception) { }
}
abstract class WaitableWaitHandle extends WaitHandle {
  public function __construct() { parent::__construct();}
  public function getContextIdx() { }
  public function getCreator() { }
  public function getParents() { }
  public function getStackTrace() { }
}
abstract class BlockableWaitHandle extends WaitableWaitHandle {
  public function __construct() { parent::__construct();}
}
class ContinuationWaitHandle extends BlockableWaitHandle {
  public function __construct() { parent::__construct();}
  static public function start($continuation) { }
  public function getPrivData() { }
  public function setPrivData($data) { }
}
class GenArrayWaitHandle extends BlockableWaitHandle {
  public function __construct() { parent::__construct();}
  static public function create($dependencies) { }
}
class SetResultToRefWaitHandle extends BlockableWaitHandle {
  public function __construct() { parent::__construct();}
  static public function create($wait_handle, &$ref) { }
}
class RescheduleWaitHandle extends WaitableWaitHandle {
  const QUEUE_DEFAULT = 0;
  const QUEUE_NO_PENDING_IO = 0;
  public function __construct() { parent::__construct();}
  static public function create($queue, $priority) { }
}
