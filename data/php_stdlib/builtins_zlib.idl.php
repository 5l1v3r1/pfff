<?php
/*
 * Purpose: Output a gz-file
 * Example: 
 * 
 * Output: 
 */
function readgzfile(String $filename, Boolean $use_include_path = false) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Read entire gz-file into an array
 * Example:   
 *   <?php
 *   $lines = gzfile('somefile.gz');
 *   foreach ($lines as $line) {
 *       echo $line;
 *   }
 *   ?>
 * 
 * Output: 
 */
function gzfile(String $filename, Boolean $use_include_path = false) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Compress a string
 * Example:   
 *   <?php
 *   $compressed = gzcompress('Compress me', 9);
 *   echo $compressed;
 *   ?>
 * 
 * Output: 
 */
function gzcompress(String $data, Int32 $level = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Uncompress a compressed string
 * Example:   
 *   <?php
 *   $compressed   = gzcompress('Compress me', 9);
 *   $uncompressed = gzuncompress($compressed);
 *   echo $uncompressed;
 *   ?>
 * 
 * Output: 
 */
function gzuncompress(String $data, Int32 $limit = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Deflate a string
 * Example:   
 *   <?php
 *   $compressed = gzdeflate('Compress me', 9);
 *   echo $compressed;
 *   ?>
 * 
 * Output: 
 */
function gzdeflate(String $data, Int32 $level = -1) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Inflate a deflated string
 * Example:   
 *   <?php
 *   $compressed   = gzdeflate('Compress me', 9);
 *   $uncompressed = gzinflate($compressed);
 *   echo $uncompressed;
 *   ?>
 * 
 * Output: 
 */
function gzinflate(String $data, Int32 $limit = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Create a gzip compressed string
 * Example:   
 *   <?php
 *   $data = implode("", file("bigfile.txt"));
 *   $gzdata = gzencode($data, 9);
 *   $fp = fopen("bigfile.txt.gz", "w");
 *   fwrite($fp, $gzdata);
 *   fclose($fp);
 *   ?>
 * 
 * Output: 
 */
function gzencode(String $data, Int32 $level = -1, Int32 $encoding_mode = k_FORCE_GZIP) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decodes a gzip compressed string
 * Example: 
 * 
 * Output: 
 */
function gzdecode(String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the coding type used for output compression
 * Example: 
 * 
 * Output: 
 */
function zlib_get_coding_type() {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Open gz-file
 * Example:   
 *   <?php
 *   $fp = gzopen("/tmp/file.gz", "r");
 *   ?>
 * 
 * Output: 
 */
function gzopen(String $filename, String $mode, Boolean $use_include_path = false) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Close an open gz-file pointer
 * Example:   
 *   <?php
 *   $gz = gzopen('somefile.gz','w9');
 *   gzputs ($gz, 'I was added to somefile.gz');
 *   gzclose($gz);
 *   ?>
 * 
 * Output: 
 */
function gzclose(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Rewind the position of a gz-file pointer
 * Example: 
 * 
 * Output: 
 */
function gzrewind(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Test for  <acronym>EOF</acronym>  on a gz-file pointer
 * Example:   
 *   <?php
 *   $gz = gzopen('somefile.gz', 'r');
 *   while (!gzeof($gz)) {
 *     echo gzgetc($gz);
 *   }
 *   gzclose($gz);
 *   ?>
 * 
 * Output: 
 */
function gzeof(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get character from gz-file pointer
 * Example:   
 *   <?php
 *   $gz = gzopen('somefile.gz', 'r');
 *   while (!gzeof($gz)) {
 *     echo gzgetc($gz);
 *   }
 *   gzclose($gz);
 *   ?>
 * 
 * Output: 
 */
function gzgetc(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get line from file pointer
 * Example:   
 *   <?php
 *   $handle = gzopen('somefile.gz', 'r');
 *   while (!gzeof($handle)) {
 *      $buffer = gzgets($handle, 4096);
 *      echo $buffer;
 *   }
 *   gzclose($handle);
 *   ?> 
 * 
 * Output: 
 */
function gzgets(Resource $zp, Int64 $length = 1024) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Get line from gz-file pointer and strip HTML tags
 * Example:   
 *   <?php
 *   $handle = gzopen('somefile.gz', 'r');
 *   while (!gzeof($handle)) {
 *      $buffer = gzgetss($handle, 4096);
 *      echo $buffer;
 *   }
 *   gzclose($handle);
 *   ?> 
 * 
 * Output: 
 */
function gzgetss(Resource $zp, Int64 $length = 0, String $allowable_tags = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Binary-safe gz-file read
 * Example:   
 *   <?php
 *   // get contents of a gz-file into a string
 *   $filename = "/usr/local/something.txt.gz";
 *   $zd = gzopen($filename, "r");
 *   $contents = gzread($zd, 10000);
 *   gzclose($zd);
 *   ?>
 * 
 * Output: 
 */
function gzread(Resource $zp, Int64 $length = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Output all remaining data on a gz-file pointer
 * Example:   
 *   <?php
 *   $fp = gzopen('file.gz', 'r');
 *   gzpassthru($fp);
 *   gzclose($fp);
 *   ?>
 * 
 * Output: 
 */
function gzpassthru(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Seek on a gz-file pointer
 * Example:   
 *   <?php
 *   $gz = gzopen('somefile.gz', 'r');
 *   gzseek($gz,2);
 *   echo gzgetc($gz);
 *   gzclose($gz);
 *   ?>
 * 
 * Output: 
 */
function gzseek(Resource $zp, Int64 $offset, Int64 $whence = SEEK_SET) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Tell gz-file pointer read/write position
 * Example: 
 * 
 * Output: 
 */
function gztell(Resource $zp) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Binary-safe gz-file write
 * Example:   
 *   <?php
 *   $string = 'Some information to compress';
 *   $gz = gzopen('somefile.gz','w9');
 *   gzwrite($gz, $string);
 *   gzclose($gz);
 *   ?>
 * 
 * Output: 
 */
function gzwrite(Resource $zp, String $str, Int64 $length = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: &Alias;  <function>gzwrite</function>
 * Example: 
 * 
 * Output: 
 */
function gzputs(Resource $zp, String $str, Int64 $length = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

