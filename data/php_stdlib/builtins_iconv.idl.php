<?php
/*
 * Purpose: Composes a  <literal>MIME</literal>  header field
 * Example:   
 *   <?php
 *   $preferences = array(
 *       "input-charset" => "ISO-8859-1",
 *       "output-charset" => "UTF-8",
 *       "line-length" => 76,
 *       "line-break-chars" => "\n"
 *   );
 *   $preferences["scheme"] = "Q";
 *   // This yields "Subject: =?UTF-8?Q?Pr=C3=BCfung_Pr=C3=BCfung?="
 *   echo iconv_mime_encode("Subject", "Prüfung Prüfung", $preferences);
 *   
 *   $preferences["scheme"] = "B";
 *   // This yields "Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?="
 *   echo iconv_mime_encode("Subject", "Prüfung Prüfung", $preferences);
 *   ?>
 * 
 * Output:   
 *   Subject: =?ISO-8859-1?Q?Pr=FCfung_f=FCr?= Entwerfen von einer MIME kopfzeile
 */
function iconv_mime_encode(String $field_name, String $field_value, Variant $preferences = null_variant) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decodes a  <literal>MIME</literal>  header field
 * Example:   
 *   <?php
 *   // This yields "Subject: Prüfung Prüfung"
 *   echo iconv_mime_decode("Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?=",
 *                          0, "ISO-8859-1");
 *   ?>
 * 
 * Output: 
 */
function iconv_mime_decode(String $encoded_string, Int32 $mode = 0, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decodes multiple  <literal>MIME</literal>  header fields at once
 * Example:   
 *   <?php
 *   $headers_string = <<<EOF
 *   Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?=
 *   To: example@example.com
 *   Date: Thu, 1 Jan 1970 00:00:00 +0000
 *   Message-Id: <example@example.com>
 *   Received: from localhost (localhost [127.0.0.1]) by localhost
 *       with SMTP id example for <example@example.com>;
 *       Thu, 1 Jan 1970 00:00:00 +0000 (UTC)
 *       (envelope-from example-return-0000-example=example.com@example.com)
 *   Received: (qmail 0 invoked by uid 65534); 1 Thu 2003 00:00:00 +0000
 *   
 *   EOF;
 *   
 *   $headers =  iconv_mime_decode_headers($headers_string, 0, "ISO-8859-1");
 *   print_r($headers);
 *   ?>
 * 
 * Output:   
 *   Array
 *   (
 *       [Subject] => Prüfung Prüfung
 *       [To] => example@example.com
 *       [Date] => Thu, 1 Jan 1970 00:00:00 +0000
 *       [Message-Id] => <example@example.com>
 *       [Received] => Array
 *           (
 *               [0] => from localhost (localhost [127.0.0.1]) by localhost with SMTP id example for <example@example.com>; Thu, 1 Jan 1970 00:00:00 +0000 (UTC) (envelope-from example-return-0000-example=example.com@example.com)
 *               [1] => (qmail 0 invoked by uid 65534); 1 Thu 2003 00:00:00 +0000
 *           )
 *   
 *   )
 */
function iconv_mime_decode_headers(String $encoded_headers, Int32 $mode = 0, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Retrieve internal configuration variables of iconv extension
 * Example:   
 *   <pre>
 *   <?php
 *   iconv_set_encoding("internal_encoding", "UTF-8");
 *   iconv_set_encoding("output_encoding", "ISO-8859-1");
 *   var_dump(iconv_get_encoding('all'));
 *   ?>
 *   </pre>
 * 
 * Output:   
 *   Array
 *   (
 *       [input_encoding] => ISO-8859-1
 *       [output_encoding] => ISO-8859-1
 *       [internal_encoding] => UTF-8
 *   )
 *   
 */
function iconv_get_encoding(String $type = "all") {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set current setting for character encoding conversion
 * Example:   
 *   <?php
 *   iconv_set_encoding("internal_encoding", "UTF-8");
 *   iconv_set_encoding("output_encoding", "ISO-8859-1");
 *   ?>
 * 
 * Output: 
 */
function iconv_set_encoding(String $type, String $charset) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Convert string to requested character encoding
 * Example:   
 *   <?php
 *   $text = "This is the Euro symbol '€'.";
 *   
 *   echo 'Original : ', $text, PHP_EOL;
 *   echo 'TRANSLIT : ', iconv("UTF-8", "ISO-8859-1//TRANSLIT", $text), PHP_EOL;
 *   echo 'IGNORE   : ', iconv("UTF-8", "ISO-8859-1//IGNORE", $text), PHP_EOL;
 *   echo 'Plain    : ', iconv("UTF-8", "ISO-8859-1", $text), PHP_EOL;
 *   
 *   ?>
 * 
 * Output:   
 *   Original : This is the Euro symbol '€'.
 *   TRANSLIT : This is the Euro symbol 'EUR'.
 *   IGNORE   : This is the Euro symbol ''.
 *   Plain    :
 *   Notice: iconv(): Detected an illegal character in input string in .\iconv-example.php on line 7
 *   This is the Euro symbol '
 */
function iconv(String $in_charset, String $out_charset, String $str) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the character count of string
 * Example: 
 * 
 * Output: 
 */
function iconv_strlen(String $str, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Finds position of first occurrence of a needle within a haystack
 * Example: 
 * 
 * Output: 
 */
function iconv_strpos(String $haystack, String $needle, Int32 $offset = 0, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Finds the last occurrence of a needle within a haystack
 * Example: 
 * 
 * Output: 
 */
function iconv_strrpos(String $haystack, String $needle, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Cut out part of a string
 * Example: 
 * 
 * Output: 
 */
function iconv_substr(String $str, Int32 $offset, Int32 $length = 0, String $charset = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Convert character encoding as output buffer handler
 * Example:   
 *   <?php
 *   iconv_set_encoding("internal_encoding", "UTF-8");
 *   iconv_set_encoding("output_encoding", "ISO-8859-1");
 *   ob_start("ob_iconv_handler"); // start output buffering
 *   ?>
 * 
 * Output: 
 */
function ob_iconv_handler(String $contents, Int32 $status) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

