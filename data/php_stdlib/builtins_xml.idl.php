<?php
/*
 * Purpose: Create an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_parser_create(String $encoding = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Free an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_parser_free(Resource $parser) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Start parsing an XML document
 * Example: 
 * 
 * Output: 
 */
function xml_parse(Resource $parser, String $data, Boolean $is_final = true) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Parse XML data into an array structure
 * Example:   
 *   <?php
 *   $simple = "<para><note>simple note</note></para>";
 *   $p = xml_parser_create();
 *   xml_parse_into_struct($p, $simple, $vals, $index);
 *   xml_parser_free($p);
 *   echo "Index array\n";
 *   print_r($index);
 *   echo "\nVals array\n";
 *   print_r($vals);
 *   ?>
 * 
 * Output:   
 *   Index array
 *   Array
 *   (
 *       [PARA] => Array
 *           (
 *               [0] => 0
 *               [1] => 2
 *           )
 *   
 *       [NOTE] => Array
 *           (
 *               [0] => 1
 *           )
 *   
 *   )
 *   
 *   Vals array
 *   Array
 *   (
 *       [0] => Array
 *           (
 *               [tag] => PARA
 *               [type] => open
 *               [level] => 1
 *           )
 *   
 *       [1] => Array
 *           (
 *               [tag] => NOTE
 *               [type] => complete
 *               [level] => 2
 *               [value] => simple note
 *           )
 *   
 *       [2] => Array
 *           (
 *               [tag] => PARA
 *               [type] => close
 *               [level] => 1
 *           )
 *   
 *   )
 */
function xml_parse_into_struct(Resource $parser, String $data, StringVec &$values, StringVec &$index = null) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Create an XML parser with namespace support
 * Example: 
 * 
 * Output: 
 */
function xml_parser_create_ns(String $encoding = null_string, String $separator = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get options from an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_parser_get_option(Resource $parser, Int32 $option) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set options in an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_parser_set_option(Resource $parser, Int32 $option, Variant $value) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up character data handler
 * Example: 
 * 
 * Output: 
 */
function xml_set_character_data_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up default handler
 * Example: 
 * 
 * Output: 
 */
function xml_set_default_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up start and end element handlers
 * Example: 
 * 
 * Output: 
 */
function xml_set_element_handler(Resource $parser, String $start_element_handler, String $end_element_handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

function xml_set_processing_instruction_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Set up start namespace declaration handler
 * Example: 
 * 
 * Output: 
 */
function xml_set_start_namespace_decl_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up end namespace declaration handler
 * Example: 
 * 
 * Output: 
 */
function xml_set_end_namespace_decl_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Set up unparsed entity declaration handler
 * Example:   
 *   <!ENTITY <parameter>name</parameter> {<parameter>publicId</parameter> | <parameter>systemId</parameter>}
 *           NDATA <parameter>notationName</parameter>
 * 
 * Output: 
 */
function xml_set_unparsed_entity_decl_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up external entity reference handler
 * Example: 
 * 
 * Output: 
 */
function xml_set_external_entity_ref_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Set up notation declaration handler
 * Example:   
 *   <!NOTATION <parameter>name</parameter>
 *   { <parameter>systemId</parameter> | <parameter>publicId</parameter>?>
 * 
 * Output: 
 */
function xml_set_notation_decl_handler(Resource $parser, String $handler) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Use XML Parser within an object
 * Example:   
 *   <?php
 *   class xml  {
 *       var $parser;
 *   
 *       function xml() 
 *       {
 *           $this->parser = xml_parser_create();
 *   
 *           xml_set_object($this->parser, $this);
 *           xml_set_element_handler($this->parser, "tag_open", "tag_close");
 *           xml_set_character_data_handler($this->parser, "cdata");
 *       }
 *   
 *       function parse($data) 
 *       {
 *           xml_parse($this->parser, $data);
 *       }
 *   
 *       function tag_open($parser, $tag, $attributes) 
 *       {
 *           var_dump($parser, $tag, $attributes); 
 *       }
 *   
 *       function cdata($parser, $cdata) 
 *       {
 *           var_dump($parser, $cdata);
 *       }
 *   
 *       function tag_close($parser, $tag) 
 *       {
 *           var_dump($parser, $tag);
 *       }
 *   
 *   } // end of class xml
 *   
 *   $xml_parser = new xml();
 *   $xml_parser->parse("<A ID='hallo'>PHP</A>");
 *   ?>
 * 
 * Output: 
 */
function xml_set_object(Resource $parser, Object &$object) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get current byte index for an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_get_current_byte_index(Resource $parser) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Get current column number for an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_get_current_column_number(Resource $parser) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get current line number for an XML parser
 * Example: 
 * 
 * Output: 
 */
function xml_get_current_line_number(Resource $parser) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get XML parser error code
 * Example: 
 * 
 * Output: 
 */
function xml_get_error_code(Resource $parser) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get XML parser error string
 * Example: 
 * 
 * Output: 
 */
function xml_error_string(Int32 $code) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose:    Converts a string with ISO-8859-1 characters encoded with UTF-8
 *    to single-byte ISO-8859-1
 * Example: 
 * 
 * Output: 
 */
function utf8_decode(String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encodes an ISO-8859-1 string to UTF-8
 * Example: 
 * 
 * Output: 
 */
function utf8_encode(String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

