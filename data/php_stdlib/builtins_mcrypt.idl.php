<?php
/*
 * Purpose: Opens the module of the algorithm and the mode to be used
 * Example:   
 *   <?php
 *       $td = mcrypt_module_open(MCRYPT_DES, '',
 *           MCRYPT_MODE_ECB, '/usr/lib/mcrypt-modes');
 *   
 *       $td = mcrypt_module_open('rijndael-256', '', 'ofb', '');
 *   ?>
 * 
 * Output: 
 */
function mcrypt_module_open(String $algorithm, String $algorithm_directory, String $mode, String $mode_directory) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Close the mcrypt module
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_close(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get an array of all supported ciphers
 * Example:   
 *   <?php
 *       $algorithms = mcrypt_list_algorithms("/usr/local/lib/libmcrypt");
 *   
 *       foreach ($algorithms as $cipher) {
 *           echo "$cipher<br />\n";
 *       }
 *   ?>
 * 
 * Output: 
 */
function mcrypt_list_algorithms(String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get an array of all supported modes
 * Example:   
 *   <?php
 *       $modes = mcrypt_list_modes();
 *   
 *       foreach ($modes as $mode) {
 *           echo "$mode <br />\n";
 *       }
 *   ?>
 * 
 * Output: 
 */
function mcrypt_list_modes(String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the blocksize of the specified algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_get_algo_block_size(String $algorithm, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the maximum supported keysize of the opened mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_get_algo_key_size(String $algorithm, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns an array with the supported keysizes of the opened algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_get_supported_key_sizes(String $algorithm, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns if the specified module is a block algorithm or not
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_is_block_algorithm_mode(String $mode, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function checks whether the specified algorithm is a block algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_is_block_algorithm(String $algorithm, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns if the specified mode outputs blocks or not
 * Example: 
 * 
 * Output: 
 */
function mcrypt_module_is_block_mode(String $mode, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function runs a self test on the specified module
 * Example:   
 *   <?php
 *   var_dump(mcrypt_module_self_test(MCRYPT_RIJNDAEL_128)) . "\n";
 *   var_dump(mcrypt_module_self_test(MCRYPT_BOGUS_CYPHER));
 *   ?>
 * 
 * Output:   
 *   bool(true)
 *   bool(false)
 */
function mcrypt_module_self_test(String $algorithm, String $lib_dir = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Create an initialization vector (IV) from a random source
 * Example:   
 *   <?php
 *       $size = mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB);
 *       $iv = mcrypt_create_iv($size, MCRYPT_DEV_RANDOM);
 *   ?>
 * 
 * Output: 
 */
function mcrypt_create_iv(Int32 $size, Int32 $source = 0) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encrypts plaintext with given parameters
 * Example:   
 *   <?php
 *       $iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB);
 *       $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
 *       $key = "This is a very secret key";
 *       $text = "Meet me at 11 o'clock behind the monument.";
 *       echo strlen($text) . "\n";
 *   
 *       $crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $text, MCRYPT_MODE_ECB, $iv);
 *       echo strlen($crypttext) . "\n";
 *   ?>
 * 
 * Output:   
 *   42
 *   64
 */
function mcrypt_encrypt(String $cipher, String $key, String $data, String $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decrypts crypttext with given parameters
 * Example: 
 * 
 * Output: 
 */
function mcrypt_decrypt(String $cipher, String $key, String $data, String $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encrypt/decrypt data in CBC mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_cbc(String $cipher, String $key, String $data, Int32 $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encrypt/decrypt data in CFB mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_cfb(String $cipher, String $key, String $data, Int32 $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Deprecated: Encrypt/decrypt data in ECB mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_ecb(String $cipher, String $key, String $data, Int32 $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Encrypt/decrypt data in OFB mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_ofb(String $cipher, String $key, String $data, Int32 $mode, String $iv = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the block size of the specified cipher
 * Example:   
 *   <?php
 *   
 *   echo mcrypt_get_block_size('tripledes', 'ecb'); // 8
 *   
 *   ?>
 * 
 * Output: 
 */
function mcrypt_get_block_size(String $cipher, String $module = null_string) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the name of the specified cipher
 * Example:   
 *   <?php
 *      $cipher = MCRYPT_TripleDES;
 *   
 *      echo mcrypt_get_cipher_name($cipher);
 *   ?>
 * 
 * Output:   
 *   3DES
 */
function mcrypt_get_cipher_name(String $cipher) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the size of the IV belonging to a specific cipher/mode combination
 * Example:   
 *   <?php
 *       echo mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB) . "\n";
 *   
 *       echo mcrypt_get_iv_size('des', 'ecb') . "\n";
 *   ?>
 * 
 * Output: 
 */
function mcrypt_get_iv_size(String $cipher, String $mode) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Get the key size of the specified cipher
 * Example:   
 *   <?php
 *       echo mcrypt_get_key_size('tripledes', 'ecb');
 *   ?>
 *   
 *   Prints:
 *   24
 * 
 * Output: 
 */
function mcrypt_get_key_size(String $cipher, String $module) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the name of the opened algorithm
 * Example:   
 *   <?php
 *   $td = mcrypt_module_open(MCRYPT_CAST_256, '', MCRYPT_MODE_CFB, '');
 *   echo mcrypt_enc_get_algorithms_name($td). "\n";
 *   
 *   $td = mcrypt_module_open('cast-256', '', MCRYPT_MODE_CFB, '');
 *   echo mcrypt_enc_get_algorithms_name($td). "\n";
 *   ?>
 * 
 * Output:   
 *   CAST-256
 *   CAST-256
 */
function mcrypt_enc_get_algorithms_name(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the blocksize of the opened algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_get_block_size(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the size of the IV of the opened algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_get_iv_size(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the maximum supported keysize of the opened mode
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_get_key_size(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns the name of the opened mode
 * Example:   
 *   <?php
 *   $td = mcrypt_module_open (MCRYPT_CAST_256, '', MCRYPT_MODE_CFB, '');
 *   echo mcrypt_enc_get_modes_name($td). "\n";
 *   
 *   $td = mcrypt_module_open ('cast-256', '', 'ecb', '');
 *   echo mcrypt_enc_get_modes_name($td). "\n";
 *   ?>
 * 
 * Output:   
 *   CFB
 *   ECB
 */
function mcrypt_enc_get_modes_name(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Returns an array with the supported keysizes of the opened algorithm
 * Example:   
 *   <?php
 *       $td = mcrypt_module_open('rijndael-256', '', 'ecb', '');
 *       var_dump(mcrypt_enc_get_supported_key_sizes($td));
 *   ?>
 * 
 * Output:   
 *   array(3) {
 *     [0]=>
 *     int(16)
 *     [1]=>
 *     int(24)
 *     [2]=>
 *     int(32)
 *   }
 */
function mcrypt_enc_get_supported_key_sizes(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Checks whether the encryption of the opened mode works on blocks
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_is_block_algorithm_mode(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Checks whether the algorithm of the opened mode is a block algorithm
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_is_block_algorithm(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Checks whether the opened mode outputs blocks
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_is_block_mode(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Runs a self test on the opened module
 * Example: 
 * 
 * Output: 
 */
function mcrypt_enc_self_test(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function encrypts data
 * Example: 
 * 
 * Output: 
 */
function mcrypt_generic(Resource $td, String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function initializes all buffers needed for encryption
 * Example: 
 * 
 * Output: 
 */
function mcrypt_generic_init(Resource $td, String $key, String $iv) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: Decrypt data
 * Example:   
 *   <?php
 *       /* Data  * / 
 *       $key = 'this is a very long key, even too long for the cipher';
 *       $plain_text = 'very important data';
 *   
 *       /* Open module, and create IV  * / 
 *       $td = mcrypt_module_open('des', '', 'ecb', '');
 *       $key = substr($key, 0, mcrypt_enc_get_key_size($td));
 *       $iv_size = mcrypt_enc_get_iv_size($td);
 *       $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
 *   
 *       /* Initialize encryption handle  * / 
 *       if (mcrypt_generic_init($td, $key, $iv) != -1) {
 *   
 *           /* Encrypt data  * / 
 *           $c_t = mcrypt_generic($td, $plain_text);
 *           mcrypt_generic_deinit($td);
 *   
 *           /* Reinitialize buffers for decryption  * / 
 *           mcrypt_generic_init($td, $key, $iv);
 *           $p_t = mdecrypt_generic($td, $c_t);
 *   
 *           /* Clean up  * / 
 *           mcrypt_generic_deinit($td);
 *           mcrypt_module_close($td);
 *       }
 *   
 *       if (strncmp($p_t, $plain_text, strlen($plain_text)) == 0) {
 *           echo "ok\n";
 *       } else {
 *           echo "error\n";
 *       }
 *   ?>
 * 
 * Output: 
 */
function mdecrypt_generic(Resource $td, String $data) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function deinitializes an encryption module
 * Example: 
 * 
 * Output: 
 */
function mcrypt_generic_deinit(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

/*
 * Purpose: This function terminates encryption
 * Example: 
 * 
 * Output: 
 */
function mcrypt_generic_end(Resource $td) {
 // THIS IS AUTOGENERATED BY builtins_php.ml
  
}

